<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataBaseDataSet" targetNamespace="http://tempuri.org/DataBaseDataSet.xsd" xmlns:mstns="http://tempuri.org/DataBaseDataSet.xsd" xmlns="http://tempuri.org/DataBaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DataBaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DataBaseConnectionString (Settings)" PropertyReference="ApplicationSettings.Exe027__DB2_.Properties.Settings.GlobalReference.Default.DataBaseConnectionString" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeesTableAdapter" GeneratorDataComponentClassName="EmployeesTableAdapter" Name="Employees" UserDataComponentName="EmployeesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="Employees" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `Employees` WHERE ((`CodEmp` = ?) AND ((? = 1 AND `NameEmp` IS NULL) OR (`NameEmp` = ?)) AND ((? = 1 AND `WageEmp` IS NULL) OR (`WageEmp` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_CodEmp" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="CodEmp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_NameEmp" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="NameEmp" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_NameEmp" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="NameEmp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_WageEmp" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="WageEmp" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="Original_WageEmp" Precision="0" ProviderType="Currency" Scale="0" Size="0" SourceColumn="WageEmp" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `Employees` (`CodEmp`, `NameEmp`, `WageEmp`) VALUES (?, ?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="CodEmp" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="CodEmp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="NameEmp" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="NameEmp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="WageEmp" Precision="0" ProviderType="Currency" Scale="0" Size="0" SourceColumn="WageEmp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CodEmp, NameEmp, WageEmp FROM Employees</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `Employees` SET `CodEmp` = ?, `NameEmp` = ?, `WageEmp` = ? WHERE ((`CodEmp` = ?) AND ((? = 1 AND `NameEmp` IS NULL) OR (`NameEmp` = ?)) AND ((? = 1 AND `WageEmp` IS NULL) OR (`WageEmp` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="CodEmp" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="CodEmp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="NameEmp" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="NameEmp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="WageEmp" Precision="0" ProviderType="Currency" Scale="0" Size="0" SourceColumn="WageEmp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_CodEmp" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="CodEmp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_NameEmp" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="NameEmp" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_NameEmp" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="NameEmp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_WageEmp" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="WageEmp" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="Original_WageEmp" Precision="0" ProviderType="Currency" Scale="0" Size="0" SourceColumn="WageEmp" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CodEmp" DataSetColumn="CodEmp" />
              <Mapping SourceColumn="NameEmp" DataSetColumn="NameEmp" />
              <Mapping SourceColumn="WageEmp" DataSetColumn="WageEmp" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SumWage" Modifier="Public" Name="SumWage" QueryType="Scalar" ScalarCallRetval="System.Decimal, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="SumWage">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SUM(WageEmp) FROM Employees</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataBaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DataBaseDataSet" msprop:Generator_UserDSName="DataBaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Employees" msprop:Generator_TableClassName="EmployeesDataTable" msprop:Generator_TableVarName="tableEmployees" msprop:Generator_RowChangedName="EmployeesRowChanged" msprop:Generator_TablePropName="Employees" msprop:Generator_RowDeletingName="EmployeesRowDeleting" msprop:Generator_RowChangingName="EmployeesRowChanging" msprop:Generator_RowEvHandlerName="EmployeesRowChangeEventHandler" msprop:Generator_RowDeletedName="EmployeesRowDeleted" msprop:Generator_RowClassName="EmployeesRow" msprop:Generator_UserTableName="Employees" msprop:Generator_RowEvArgName="EmployeesRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CodEmp" msprop:Generator_ColumnVarNameInTable="columnCodEmp" msprop:Generator_ColumnPropNameInRow="CodEmp" msprop:Generator_ColumnPropNameInTable="CodEmpColumn" msprop:Generator_UserColumnName="CodEmp" type="xs:int" />
              <xs:element name="NameEmp" msprop:Generator_ColumnVarNameInTable="columnNameEmp" msprop:Generator_ColumnPropNameInRow="NameEmp" msprop:Generator_ColumnPropNameInTable="NameEmpColumn" msprop:Generator_UserColumnName="NameEmp" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WageEmp" msprop:Generator_ColumnVarNameInTable="columnWageEmp" msprop:Generator_ColumnPropNameInRow="WageEmp" msprop:Generator_ColumnPropNameInTable="WageEmpColumn" msprop:Generator_UserColumnName="WageEmp" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Employees" />
      <xs:field xpath="mstns:CodEmp" />
    </xs:unique>
  </xs:element>
</xs:schema>